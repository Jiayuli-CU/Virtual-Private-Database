CREATE TABLE PROJECT_COPYWRITING
(
  ID INT NOT NULL,
  PROJECT_ID INT NOT NULL,
  EMPLOYEE_ID VARCHAR2(20) NOT NULL,
  GROUP_TYPE VARCHAR2(20) DEFAULT ON NULL ('traditional') CHECK(in_use IN ('traditional', 'new')),
  CONTENT VARCHAR2(2000) NOT NULL, 
  PICTURE CLOB,
  UPDATE_TIME DATE NOT NULL, 
  CONSTRAINT PROJECT_COPYWRITING_PK PRIMARY KEY (ID),
  CONSTRAINT FK_PROJECT_COPYWRITING FOREIGN KEY (PROJECT_ID) REFERENCES PROJECTS(ID),
  CONSTRAINT FK_EMPLOYEE_COPYWRITING FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEES(ID)
);

CREATE TABLE PROJECT_FEEDBACK
(
  ID INT NOT NULL,
  PROJECT_ID INT NOT NULL,
  FEEDBACK VARCHAR2(2000) NOT NULL, 
  IMPROVEMENT VARCHAR2(2000) NOT NULL, 
  COMPETING_PROJ VARCHAR2(32),
  UPDATE_TIME DATE NOT NULL, 
  EMPLOYEE_ID VARCHAR2(20) NOT NULL,
  CONSTRAINT PROJECT_FEEDBACK_PK PRIMARY KEY (ID),
  CONSTRAINT FK_PROJECT_FEEDBACK FOREIGN KEY (PROJECT_ID) REFERENCES PROJECTS(ID),
  CONSTRAINT FK_EMPLOYEE_FEEDBACK FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEES(ID)
);


CREATE TABLE EVENT_PLANNING
(
  ID INT NOT NULL,
  EMPLOYEE_ID VARCHAR2(20) NOT NULL,
  EVENT_TYPE VARCHAR2(20) NOT NULL,
  PURPOSE VARCHAR2(2000) NOT NULL, 
  EVENT_OBJECT VARCHAR2(20),
  BUDGET NUMBER NOT NULL,
  EVENT_LOCATION VARCHAR2(200) NOT NULL,
  FINAL_TIME DATE NOT NULL, 
  CONSTRAINT EVENT_PLANNING_PK PRIMARY KEY (ID),
  CONSTRAINT FK_EMPLOYEE_EVENT_PLANNING FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEES(ID) 
);
